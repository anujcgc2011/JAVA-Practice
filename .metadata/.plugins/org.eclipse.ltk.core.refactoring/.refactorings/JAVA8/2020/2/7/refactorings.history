<?xml version="1.0" encoding="UTF-8"?>
<session version="1.0">&#x0A;<refactoring comment="Extract method &apos;private static void createThreadUsingAnonymousClass()&apos; from &apos;com.evalueserve.functionalInterfaceWithLambda.ClientClass.main()&apos; to &apos;com.evalueserve.functionalInterfaceWithLambda.ClientClass&apos;&#x0D;&#x0A;- Original project: &apos;JAVA8&apos;&#x0D;&#x0A;- Method name: &apos;createThreadUsingAnonymousClass&apos;&#x0D;&#x0A;- Destination type: &apos;com.evalueserve.functionalInterfaceWithLambda.ClientClass&apos;&#x0D;&#x0A;- Declared visibility: &apos;private&apos;" comments="false" description="Extract method &apos;createThreadUsingAnonymousClass&apos;" destination="0" exceptions="false" flags="786434" id="org.eclipse.jdt.ui.extract.method" input="/src&lt;com.evalueserve.functionalInterfaceWithLambda{ClientClass.java" name="createThreadUsingAnonymousClass" replace="false" selection="135 177" stamp="1581745774588" version="1.0" visibility="2"/>&#x0A;<refactoring comment="Extract method &apos;private static void createThreadWithoutLambda()&apos; from &apos;com.evalueserve.lambdaExpression.LambdaExpressionClientTest.main()&apos; to &apos;com.evalueserve.lambdaExpression.LambdaExpressionClientTest&apos;&#x0D;&#x0A;- Original project: &apos;JAVA8&apos;&#x0D;&#x0A;- Method name: &apos;createThreadWithoutLambda&apos;&#x0D;&#x0A;- Destination type: &apos;com.evalueserve.lambdaExpression.LambdaExpressionClientTest&apos;&#x0D;&#x0A;- Declared visibility: &apos;private&apos;" comments="false" description="Extract method &apos;createThreadWithoutLambda&apos;" destination="0" exceptions="false" flags="786434" id="org.eclipse.jdt.ui.extract.method" input="/src&lt;com.evalueserve.lambdaExpression{LambdaExpressionClientTest.java" name="createThreadWithoutLambda" replace="false" selection="154 167" stamp="1581775654843" version="1.0" visibility="2"/>
</session>